angular.module("wnHttp",["ui-notification"]),function(){angular.module("wnHttp").provider("wnHttpService",function(){var _apiBaseUrl,_exceptionType;this.setApiBaseUrl=function(apiBaseUrl){_apiBaseUrl=apiBaseUrl},this.setExceptionType=function(exceptionType){_exceptionType=exceptionType},this.$get=["Notification","$q","$http",function(Notification,$q,$http){var Service=function(controllerName){var instance=this;instance.apiBaseUrl=_apiBaseUrl,instance.exceptionType=_exceptionType,instance.apiController=controllerName,instance.get=function(queryParamsObject){var deferred=$q.defer();return $http({method:"GET",url:instance.apiBaseUrl+instance.apiController+instance.getQueryString(queryParamsObject),dataType:"JSON"}).then(function(success){deferred.resolve(success.data)},function(error){deferred.reject(error.statusText),instance.displayError(error,error.statusText)}),deferred.promise},instance.getById=function(id,queryParamsObject){var deferred=$q.defer();return $http({method:"GET",url:instance.apiBaseUrl+instance.apiController+"/Get/"+id+instance.getQueryString(queryParamsObject),dataType:"JSON"}).then(function(success){deferred.resolve(success.data)},function(error){deferred.reject(error.statusText),instance.displayError(error,error.statusText)}),deferred.promise},instance.create=function(data,queryParamsObject){var deferred=$q.defer();return $http({method:"POST",data:data,url:instance.apiBaseUrl+instance.apiController+instance.getQueryString(queryParamsObject),dataType:"JSON"}).then(function(success){deferred.resolve(success.data)},function(error){deferred.reject(error.statusText),instance.displayError(error,error.statusText)}),deferred.promise},instance.update=function(data,queryParamsObject){var deferred=$q.defer();return $http({method:"PUT",data:data,url:instance.apiBaseUrl+instance.apiController+"/Put/"+data.Id+instance.getQueryString(queryParamsObject),dataType:"JSON"}).then(function(success){deferred.resolve(success.data)},function(error){deferred.reject(error.statusText),instance.displayError(error,error.statusText)}),deferred.promise},instance.delete=function(id,queryParamsObject){var deferred=$q.defer();return $http({method:"DELETE",url:instance.apiBaseUrl+instance.apiController+"/Delete/"+id+instance.getQueryString(queryParamsObject),dataType:"JSON"}).then(function(success){deferred.resolve(success.data)},function(error){deferred.reject(error.statusText),instance.displayError(error,error.statusText)}),deferred.promise},instance.search=function(key,includeFields,queryParamsObject){var deferred=$q.defer(),includeString="";return includeFields.forEach(function(field){includeString+="&include="+field}),console.log(instance.apiBaseUrl+instance.apiController+"/Search?query="+key+includeString+instance.getQueryString(queryParamsObject,!0)),$http({method:"GET",url:instance.apiBaseUrl+instance.apiController+"/Search?query="+key+includeString+instance.getQueryString(queryParamsObject,!0),dataType:"JSON"}).then(function(success){deferred.resolve(success.data)},function(error){deferred.reject(error.statusText),instance.displayError(error,error.statusText)}),deferred.promise},instance.getQueryString=function(queryParamsObject,trailing){var queryParamsString;return _.each(_.keys(queryParamsObject),function(key){queryParamsString?queryParamsString+="&"+key+"="+queryParamsObject[key]:queryParamsString=trailing?"&"+key+"="+queryParamsObject[key]:"?"+key+"="+queryParamsObject[key]}),queryParamsString||""},instance.displaySuccess=function(message){Notification.success(message)},instance.displayError=function(error,defaultMessage){console.log(error),500===error.status&&error.data.ExceptionType===instance.exceptionType?Notification.error(error.data.ExceptionMessage):Notification.error(defaultMessage)}},serviceStub=new Service;return{getInstance:function(controllerName){return new Service(controllerName)},apiBaseUrl:serviceStub.apiBaseUrl,displayError:serviceStub.displayError,displaySuccess:serviceStub.displaySuccess}}]})}();